{"ast":null,"code":"var _jsxFileName = \"/Users/hidetakayamamoto/Desktop/Gs/teamDev/album/src/App.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import firebase from \"firebase/app\";\n// import { getStorage, ref } from \"https://www.gstatic.com/firebasejs/9.23.0/firebase-storage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"firebase/storage\";\nimport { getPhotoUrl } from \"./getPhotoVer2\";\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js\";\nimport \"./App.css\";\nimport party from \"party.js\";\n// import \"./gimmick.js\";\n\n// 以下FirebaseStorageから画像データを取得\n// FirebaseStorageの設定と初期化\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD_JBdHTVPMdCnF1kCNdCPeM7BxHKnu8OU\",\n  authDomain: \"pictures-fc50e.firebaseapp.com\",\n  projectId: \"pictures-fc50e\",\n  storageBucket: \"pictures-fc50e.appspot.com\",\n  messagingSenderId: \"1019109300557\",\n  appId: \"1:1019109300557:web:3234142dc98f763a0e7f04\"\n};\nconst app = initializeApp(firebaseConfig);\n// firebase.initializeApp(firebaseConfig);\n\nexport default function SimpleSlider() {\n  _s();\n  // photoUrlsという状態変数と、その状態変数を更新するためのsetPhotoUrlsという関数を宣言\n  const [photoUrls, setPhotoUrls] = useState([]);\n  useEffect(() => {\n    const fetchPhotoUrls = async () => {\n      const urls = [];\n      const imageNames = [\"photo1.jpg\", \"photo2.jpg\", \"photo3.jpg\", \"photo4.jpg\", \"photo5.jpg\"];\n      for (const imageName of imageNames) {\n        const url = await getPhotoUrl(imageName);\n        urls.push(url);\n      }\n      setPhotoUrls(urls);\n    };\n    fetchPhotoUrls();\n  }, []);\n\n  // 以下FirebaseStorageから取得した画像をReactSlickでスライダー表示\n\n  const settings = {\n    autoplay: true,\n    //自動再生\n    autoplaySpeed: 3000,\n    //自動再生のスピード\n    dots: true,\n    //スライダー下の点の表示/非表示\n    infinite: true,\n    //無限スクロールの有効/無効\n    speed: 1000,\n    //スライド切り替えの速度\n    slidesToShow: 1,\n    //一度に表示するスライド数\n    slidesToScroll: 1 //一度にスライドする枚数\n    // arrows: true, \n  };\n\n  // indexは配列に入っている順番\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here's Your Album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"button\",\n      onmousedown: \"party.confetti(this)\",\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      ...settings,\n      children: photoUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"head-text\",\n          children: [\"No.\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"photo-box\",\n          className: `photo${index + 1}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"photo\",\n            src: url,\n            alt: `Photo${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(SimpleSlider, \"gQwbzYtGto+sioQk0mkFLNBOL+I=\");\n_c = SimpleSlider;\nvar _c;\n$RefreshReg$(_c, \"SimpleSlider\");","map":{"version":3,"names":["React","useEffect","useState","Slider","getPhotoUrl","initializeApp","party","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","SimpleSlider","_s","photoUrls","setPhotoUrls","fetchPhotoUrls","urls","imageNames","imageName","url","push","settings","autoplay","autoplaySpeed","dots","infinite","speed","slidesToShow","slidesToScroll","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","onmousedown","map","index","id","src","alt","_c","$RefreshReg$"],"sources":["/Users/hidetakayamamoto/Desktop/Gs/teamDev/album/src/App.jsx"],"sourcesContent":["// import React from \"react\";\n// import firebase from \"firebase/app\";\n// import { getStorage, ref } from \"https://www.gstatic.com/firebasejs/9.23.0/firebase-storage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"firebase/storage\";\nimport { getPhotoUrl } from \"./getPhotoVer2\";\nimport { initializeApp } from \"https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js\";\nimport \"./App.css\";\nimport party from \"party.js\";\n// import \"./gimmick.js\";\n\n\n// 以下FirebaseStorageから画像データを取得\n// FirebaseStorageの設定と初期化\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD_JBdHTVPMdCnF1kCNdCPeM7BxHKnu8OU\",\n  authDomain: \"pictures-fc50e.firebaseapp.com\",\n  projectId: \"pictures-fc50e\",\n  storageBucket: \"pictures-fc50e.appspot.com\",\n  messagingSenderId: \"1019109300557\",\n  appId: \"1:1019109300557:web:3234142dc98f763a0e7f04\"\n};\n\nconst app = initializeApp(firebaseConfig);\n// firebase.initializeApp(firebaseConfig);\n\nexport default function SimpleSlider() {\n  // photoUrlsという状態変数と、その状態変数を更新するためのsetPhotoUrlsという関数を宣言\n  const [photoUrls, setPhotoUrls] = useState([]);\n\n  useEffect(() => {\n    const fetchPhotoUrls = async () => {\n      const urls = [];\n      const imageNames = [\"photo1.jpg\", \"photo2.jpg\", \"photo3.jpg\", \"photo4.jpg\", \"photo5.jpg\"];\n      for (const imageName of imageNames) {\n        const url = await getPhotoUrl(imageName);\n        urls.push(url);\n      }\n      setPhotoUrls(urls);\n    };\n\n    fetchPhotoUrls();\n  }, []);\n\n\n  // 以下FirebaseStorageから取得した画像をReactSlickでスライダー表示\n\n  const settings = {\n    autoplay: true, //自動再生\n    autoplaySpeed: 3000, //自動再生のスピード\n    dots: true, //スライダー下の点の表示/非表示\n    infinite: true, //無限スクロールの有効/無効\n    speed: 1000, //スライド切り替えの速度\n    slidesToShow: 1, //一度に表示するスライド数\n    slidesToScroll: 1, //一度にスライドする枚数\n    // arrows: true, \n  };\n\n  // indexは配列に入っている順番\n\n  return (\n    <div>\n      <div className=\"title\">\n        <h1>Here's Your Album</h1>\n      </div>\n\n      <div class=\"button\" onmousedown=\"party.confetti(this)\">Click me!</div>\n\n      <Slider {...settings}>\n        {photoUrls.map((url, index) => (\n          <div>\n            <h2 id=\"head-text\">No.{index + 1}</h2>\n            <div id=\"photo-box\" className={`photo${index + 1}`} key={index} >\n              <img id=\"photo\" src={url} alt={`Photo${index + 1}`} />\n            </div>\n          </div>\n        ))}\n      </Slider>\n    </div>\n  );\n}\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAO,gCAAgC;AACvC,OAAO,sCAAsC;AAC7C,OAAO,kBAAkB;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,QAAQ,2DAA2D;AACzF,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,UAAU;AAC5B;;AAGA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,GAAG,GAAGX,aAAa,CAACI,cAAc,CAAC;AACzC;;AAEA,eAAe,SAASQ,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMoB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,IAAI,GAAG,EAAE;MACf,MAAMC,UAAU,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;MACzF,KAAK,MAAMC,SAAS,IAAID,UAAU,EAAE;QAClC,MAAME,GAAG,GAAG,MAAMrB,WAAW,CAACoB,SAAS,CAAC;QACxCF,IAAI,CAACI,IAAI,CAACD,GAAG,CAAC;MAChB;MACAL,YAAY,CAACE,IAAI,CAAC;IACpB,CAAC;IAEDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAGN;;EAEA,MAAMM,QAAQ,GAAG;IACfC,QAAQ,EAAE,IAAI;IAAE;IAChBC,aAAa,EAAE,IAAI;IAAE;IACrBC,IAAI,EAAE,IAAI;IAAE;IACZC,QAAQ,EAAE,IAAI;IAAE;IAChBC,KAAK,EAAE,IAAI;IAAE;IACbC,YAAY,EAAE,CAAC;IAAE;IACjBC,cAAc,EAAE,CAAC,CAAE;IACnB;EACF,CAAC;;EAED;;EAEA,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAK4B,SAAS,EAAC,OAAO;MAAAD,QAAA,eACpB3B,OAAA;QAAA2B,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAENhC,OAAA;MAAKiC,KAAK,EAAC,QAAQ;MAACC,WAAW,EAAC,sBAAsB;MAAAP,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEtEhC,OAAA,CAACL,MAAM;MAAA,GAAKwB,QAAQ;MAAAQ,QAAA,EACjBhB,SAAS,CAACwB,GAAG,CAAC,CAAClB,GAAG,EAAEmB,KAAK,kBACxBpC,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAIqC,EAAE,EAAC,WAAW;UAAAV,QAAA,GAAC,KAAG,EAACS,KAAK,GAAG,CAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtChC,OAAA;UAAKqC,EAAE,EAAC,WAAW;UAACT,SAAS,EAAG,QAAOQ,KAAK,GAAG,CAAE,EAAE;UAAAT,QAAA,eACjD3B,OAAA;YAAKqC,EAAE,EAAC,OAAO;YAACC,GAAG,EAAErB,GAAI;YAACsB,GAAG,EAAG,QAAOH,KAAK,GAAG,CAAE;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADCI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEzD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CAtDuBD,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}